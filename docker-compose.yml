version: '3.7'
services:
  web:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - enviroment.env
    depends_on:
      - mongodb
    networks:
      - rmdp_api
  mongodb:
    image: 'mongo:latest'
    container_name: mongo-server
    env_file:
      - enviroment.env
    ports:
      - '27017:27017'
    volumes:
      - 'mongodb-volume:/data/db'
      - './mongo-seed-data:/data/mongo-seed-data'
      - './mongodb-scripts:/docker-entrypoint-initdb.d'
    networks:
      - rmdp_api
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    links:
      - mongodb
    env_file:
      - enviroment.env
    ports:
      - '8081:8081'
    networks:
      - rmdp_api
    depends_on:
      - mongodb
    restart: always
  redis:
    container_name: redis
    image: 'redis:latest'
    command:
      - redis-server
      - '--bind'
      - redis
      - '--port'
      - '6379'
    ports:
      - '6379:6379'
    volumes:
      - './conf/redis/redis.conf:/tmp/redis.conf'
    networks:
      - rmdp_api
  driver_worker:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A driver worker -l info -c 1
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - enviroment.env
    networks:
      - rmdp_api
  driver_beat:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A driver beat -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - dev.env
    networks:
      - rmdp_api
  order_worker:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A order worker -l info -c 1
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - dev.env
    networks:
      - rmdp_api
  order_beat:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A order beat -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - dev.env
    networks:
      - rmdp_api
  rmdp_worker:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A RMDP_ml worker -l info -c 1
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - enviroment.env
    networks:
      - rmdp_api
  rmdp_beat:
    build:
      context: .
      dockerfile: web.Dockerfile
    command: celery -A RMDP_ml beat -l info
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
    env_file:
      - enviroment.env
    networks:
      - rmdp_api
  flower:
    image: mher/flower:0.9.5
    command: ['flower', '--broker=redis://redis:6379/0', '--port=5555']
    expose:
      - 5555
    ports:
      - '5555:5555'
    depends_on:
      - redis
    networks:
      - rmdp_api
    restart: always
networks:
  rmdp_api:
    driver: bridge
volumes:
  mongodb-volume: null
  redisdata: null
